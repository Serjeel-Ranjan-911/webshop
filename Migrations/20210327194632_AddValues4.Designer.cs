// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webshop.Models;

namespace webshop.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210327194632_AddValues4")]
    partial class AddValues4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("webshop.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("OptionId");

                    b.ToTable("Option");

                    b.HasData(
                        new
                        {
                            OptionId = 1,
                            Name = "S",
                            Type = "Size"
                        },
                        new
                        {
                            OptionId = 2,
                            Name = "M",
                            Type = "Size"
                        },
                        new
                        {
                            OptionId = 3,
                            Name = "L",
                            Type = "Size"
                        },
                        new
                        {
                            OptionId = 4,
                            Name = "41",
                            Type = "ShoeSize"
                        },
                        new
                        {
                            OptionId = 6,
                            Name = "43",
                            Type = "ShoeSize"
                        },
                        new
                        {
                            OptionId = 5,
                            Name = "42",
                            Type = "ShoeSize"
                        },
                        new
                        {
                            OptionId = 7,
                            Name = "44",
                            Type = "ShoeSize"
                        },
                        new
                        {
                            OptionId = 9,
                            Name = "Red",
                            Type = "Color"
                        },
                        new
                        {
                            OptionId = 10,
                            Name = "Yellow",
                            Type = "Color"
                        },
                        new
                        {
                            OptionId = 11,
                            Name = "Blue",
                            Type = "Color"
                        },
                        new
                        {
                            OptionId = 12,
                            Name = "Dark Blue",
                            Type = "Color"
                        },
                        new
                        {
                            OptionId = 13,
                            Name = "Orange",
                            Type = "Color"
                        },
                        new
                        {
                            OptionId = 14,
                            Name = "Jeans",
                            Type = "Material"
                        },
                        new
                        {
                            OptionId = 15,
                            Name = "Cotton",
                            Type = "Material"
                        },
                        new
                        {
                            OptionId = 16,
                            Name = "Silk",
                            Type = "Material"
                        });
                });

            modelBuilder.Entity("webshop.Models.OptionGroup", b =>
                {
                    b.Property<int>("OptionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OptionGroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("OptionGroup");
                });

            modelBuilder.Entity("webshop.Models.OptionGroupOption", b =>
                {
                    b.Property<int>("OptionGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.HasKey("OptionGroupId", "OptionId");

                    b.HasIndex("OptionId");

                    b.ToTable("OptionGroupOption");
                });

            modelBuilder.Entity("webshop.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Wheight")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("webshop.Models.OptionGroup", b =>
                {
                    b.HasOne("webshop.Models.Product", "Product")
                        .WithMany("OptionGroup")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webshop.Models.OptionGroupOption", b =>
                {
                    b.HasOne("webshop.Models.OptionGroup", "OptionGroup")
                        .WithMany("OptionLink")
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webshop.Models.Option", "Option")
                        .WithMany("OptionGroupLink")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
